#!/usr/bin/bash
# This script displays the current set of SearchGuard permissions
#
# must have access to logging project.  The inputs are:
#   pod   An Elasticsearch pod name

cd $(dirname "${BASH_SOURCE[0]}")
source env-prep

roles=$(oc -n $LOGGING_NS exec -c elasticsearch $pod -- es_acl get --doc=roles)
mappings=$(oc -n $LOGGING_NS exec -c elasticsearch $pod -- es_acl get --doc=rolesmapping)
actions=$(oc -n $LOGGING_NS exec -c elasticsearch $pod -- es_acl get --doc=actiongroups)

read -r -d '' SCRIPT << "EOF"
import json,sys

roles=json.loads(sys.argv[1])
mappings=json.loads(sys.argv[2])
actions=json.loads(sys.argv[3])

def permissions(name,perms=set()):
  if name in actions:
      for a in actions[name]:
          if a in actions and a not in perms:
            perms.union(permissions(a,perms))
          else:
            perms.add(a)
      return perms
  perms.add(name)
  return perms

def printPermissions(perms):
  for perm in perms:
    roleActions = set()
    permissions(perm, roleActions)
    for action in sorted(roleActions):
        print("        |-" + action)

for role in mappings:
    for mtype, users in mappings[role].items():
       if mtype in ['users','backendroles']:
         for user in users:
             print("")
             print(user)
             if role in roles:
               perms = roles[role]
               for ptype, pset in perms.items():
                   if 'cluster' == ptype:
                       print("  |--- cluster:")
                       printPermissions(pset)
                   if 'indices' == ptype:
                       print("  |- indices:")
                       for index, docperms in pset.items():
                           for doc, perms in docperms.items():
                               print("    |-" + index + "/" + doc)
                               if doc == '_dls_':
                                 print("        |-" + perms)
                               else: 
                                 printPermissions(perms)
             else:
                 print("[WARN] role not found for rolemapping:" + role)

EOF

python -c "$SCRIPT" "$roles" "$mappings" "$actions"

